State Number: 1
S' -> .Program $ 
Program -> .MainClass ClassDeclList 
MainClass -> .class id { public static void main ( String [ ] id ) { VarDeclList { StatementList } } } 

Transitions: 
Transition to 3 on MainClass
Transition to 2 on Program
Transition to 218 on class



State Number: 2
S' -> Program .$ 

Transitions: 
None


State Number: 3
Program -> MainClass .ClassDeclList 
ClassDeclList -> .
ClassDeclList -> .ClassDeclList ClassDecl 

Transitions: 
Transition to 4 on ClassDeclList



State Number: 4
Program -> MainClass ClassDeclList .
ClassDeclList -> ClassDeclList .ClassDecl 
ClassDecl -> .ClassDeclSpec ClassDeclDeff 
ClassDeclSpec -> .class id 

Transitions: 
Transition to 6 on ClassDeclSpec
Transition to 5 on ClassDecl
Transition to 216 on class



State Number: 5
ClassDeclList -> ClassDeclList ClassDecl .

Transitions: 
None


State Number: 6
ClassDecl -> ClassDeclSpec .ClassDeclDeff 
ClassDeclDeff -> .extends id { VarDeclList MethodDeclList } 
ClassDeclDeff -> .{ VarDeclList MethodDeclList } 

Transitions: 
Transition to 7 on ClassDeclDeff
Transition to 8 on extends
Transition to 212 on {



State Number: 7
ClassDecl -> ClassDeclSpec ClassDeclDeff .

Transitions: 
None


State Number: 8
ClassDeclDeff -> extends .id { VarDeclList MethodDeclList } 

Transitions: 
Transition to 9 on id



State Number: 9
ClassDeclDeff -> extends id .{ VarDeclList MethodDeclList } 

Transitions: 
Transition to 10 on {



State Number: 10
ClassDeclDeff -> extends id { .VarDeclList MethodDeclList } 
VarDeclList -> .
VarDeclList -> .VarDeclList VarDecl 

Transitions: 
Transition to 11 on VarDeclList



State Number: 11
ClassDeclDeff -> extends id { VarDeclList .MethodDeclList } 
MethodDeclList -> .MethodDeclList MethodDecl 
MethodDeclList -> .
VarDeclList -> VarDeclList .VarDecl 
VarDecl -> .Type VarDeclID MultiDeclList ; 
Type -> .int IntType 
Type -> .boolean 
Type -> .id 

Transitions: 
Transition to 193 on Type
Transition to 159 on boolean
Transition to 12 on MethodDeclList
Transition to 192 on VarDecl
Transition to 160 on id
Transition to 155 on int



State Number: 12
ClassDeclDeff -> extends id { VarDeclList MethodDeclList .} 
MethodDeclList -> MethodDeclList .MethodDecl 
MethodDecl -> .public Type id ( FormalList ) { VarDeclList StatementList return Exp ; } 

Transitions: 
Transition to 15 on public
Transition to 14 on MethodDecl
Transition to 13 on }



State Number: 13
ClassDeclDeff -> extends id { VarDeclList MethodDeclList } .

Transitions: 
None


State Number: 14
MethodDeclList -> MethodDeclList MethodDecl .

Transitions: 
None


State Number: 15
MethodDecl -> public .Type id ( FormalList ) { VarDeclList StatementList return Exp ; } 
Type -> .int IntType 
Type -> .boolean 
Type -> .id 

Transitions: 
Transition to 16 on Type
Transition to 159 on boolean
Transition to 160 on id
Transition to 155 on int



State Number: 16
MethodDecl -> public Type .id ( FormalList ) { VarDeclList StatementList return Exp ; } 

Transitions: 
Transition to 17 on id



State Number: 17
MethodDecl -> public Type id .( FormalList ) { VarDeclList StatementList return Exp ; } 

Transitions: 
Transition to 18 on (



State Number: 18
MethodDecl -> public Type id ( .FormalList ) { VarDeclList StatementList return Exp ; } 
FormalList -> .
FormalList -> .Type id FormalRest 
Type -> .int IntType 
Type -> .boolean 
Type -> .id 

Transitions: 
Transition to 205 on Type
Transition to 159 on boolean
Transition to 19 on FormalList
Transition to 160 on id
Transition to 155 on int



State Number: 19
MethodDecl -> public Type id ( FormalList .) { VarDeclList StatementList return Exp ; } 

Transitions: 
Transition to 20 on )



State Number: 20
MethodDecl -> public Type id ( FormalList ) .{ VarDeclList StatementList return Exp ; } 

Transitions: 
Transition to 21 on {



State Number: 21
MethodDecl -> public Type id ( FormalList ) { .VarDeclList StatementList return Exp ; } 
VarDeclList -> .
VarDeclList -> .VarDeclList VarDecl 

Transitions: 
Transition to 22 on VarDeclList



State Number: 22
MethodDecl -> public Type id ( FormalList ) { VarDeclList .StatementList return Exp ; } 
StatementList -> .
StatementList -> .StatementList Statement 
VarDeclList -> VarDeclList .VarDecl 
VarDecl -> .Type VarDeclID MultiDeclList ; 
Type -> .int IntType 
Type -> .boolean 
Type -> .id 

Transitions: 
Transition to 193 on Type
Transition to 159 on boolean
Transition to 192 on VarDecl
Transition to 23 on StatementList
Transition to 160 on id
Transition to 155 on int



State Number: 23
MethodDecl -> public Type id ( FormalList ) { VarDeclList StatementList .return Exp ; } 
StatementList -> StatementList .Statement 
Statement -> .for ( InitializationStm ; Exp ; IncrementStm ) Statement 
Statement -> .{ StatementList } 
Statement -> .do { Statement } while ( Exp ) ; 
Statement -> .id Assign 
Statement -> .switch ( id ) { caseList } 
Statement -> .while ( Exp ) Statement 
Statement -> .System.out.println ( Exp ) ; 
Statement -> .( Type id = Exp ) FormalVarExp ; 
Statement -> .if ( Exp ) { Statement } ElseIfList 

Transitions: 
Transition to 89 on Statement
Transition to 90 on for
Transition to 139 on (
Transition to 99 on {
Transition to 102 on do
Transition to 111 on id
Transition to 129 on while
Transition to 161 on if
Transition to 24 on return
Transition to 122 on switch
Transition to 134 on System.out.println



State Number: 24
MethodDecl -> public Type id ( FormalList ) { VarDeclList StatementList return .Exp ; } 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 25 on Exp
Transition to 33 on Less



State Number: 25
MethodDecl -> public Type id ( FormalList ) { VarDeclList StatementList return Exp .; } 

Transitions: 
Transition to 26 on ;



State Number: 26
MethodDecl -> public Type id ( FormalList ) { VarDeclList StatementList return Exp ; .} 

Transitions: 
Transition to 27 on }



State Number: 27
MethodDecl -> public Type id ( FormalList ) { VarDeclList StatementList return Exp ; } .

Transitions: 
None


State Number: 28
Exp -> And .Elist 
Elist -> .&& And Elist 
Elist -> .

Transitions: 
Transition to 30 on &&
Transition to 29 on Elist



State Number: 29
Exp -> And Elist .

Transitions: 
None


State Number: 30
Elist -> && .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 31 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 33 on Less



State Number: 31
Elist -> && And .Elist 
Elist -> .&& And Elist 
Elist -> .

Transitions: 
Transition to 30 on &&
Transition to 32 on Elist



State Number: 32
Elist -> && And Elist .

Transitions: 
None


State Number: 33
And -> Less .Alist 
Alist -> .
Alist -> .< Less Alist 

Transitions: 
Transition to 34 on Alist
Transition to 35 on <



State Number: 34
And -> Less Alist .

Transitions: 
None


State Number: 35
Alist -> < .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 81 on number
Transition to 46 on Not
Transition to 66 on Factor
Transition to 77 on true
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 79 on id
Transition to 36 on Less



State Number: 36
Alist -> < Less .Alist 
Alist -> .
Alist -> .< Less Alist 

Transitions: 
Transition to 37 on Alist
Transition to 35 on <



State Number: 37
Alist -> < Less Alist .

Transitions: 
None


State Number: 38
Less -> Term .Llist 
Llist -> .- Term Llist 
Llist -> .+ Term Llist 
Llist -> .

Transitions: 
Transition to 39 on Llist
Transition to 43 on +
Transition to 40 on -



State Number: 39
Less -> Term Llist .

Transitions: 
None


State Number: 40
Llist -> - .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 81 on number
Transition to 46 on Not
Transition to 66 on Factor
Transition to 77 on true
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 41 on Term
Transition to 79 on id



State Number: 41
Llist -> - Term .Llist 
Llist -> .- Term Llist 
Llist -> .+ Term Llist 
Llist -> .

Transitions: 
Transition to 42 on Llist
Transition to 43 on +
Transition to 40 on -



State Number: 42
Llist -> - Term Llist .

Transitions: 
None


State Number: 43
Llist -> + .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 81 on number
Transition to 46 on Not
Transition to 66 on Factor
Transition to 77 on true
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 44 on Term
Transition to 79 on id



State Number: 44
Llist -> + Term .Llist 
Llist -> .- Term Llist 
Llist -> .+ Term Llist 
Llist -> .

Transitions: 
Transition to 45 on Llist
Transition to 43 on +
Transition to 40 on -



State Number: 45
Llist -> + Term Llist .

Transitions: 
None


State Number: 46
Term -> Not .Tlist 
Tlist -> .
Tlist -> .* Not Tlist 

Transitions: 
Transition to 47 on Tlist
Transition to 48 on *



State Number: 47
Term -> Not Tlist .

Transitions: 
None


State Number: 48
Tlist -> * .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 81 on number
Transition to 49 on Not
Transition to 66 on Factor
Transition to 77 on true
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 79 on id



State Number: 49
Tlist -> * Not .Tlist 
Tlist -> .
Tlist -> .* Not Tlist 

Transitions: 
Transition to 50 on Tlist
Transition to 48 on *



State Number: 50
Tlist -> * Not Tlist .

Transitions: 
None


State Number: 51
Not -> ! .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 71 on new
Transition to 81 on number
Transition to 52 on Factor
Transition to 77 on true
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 79 on id



State Number: 52
Not -> ! Factor .DotArrayList 
DotArrayList -> .DotArrayList DotArray 
DotArrayList -> .

Transitions: 
Transition to 53 on DotArrayList



State Number: 53
Not -> ! Factor DotArrayList .
DotArrayList -> DotArrayList .DotArray 
DotArray -> .. Member 
DotArray -> .[ Exp ] 

Transitions: 
Transition to 68 on [
Transition to 55 on .
Transition to 54 on DotArray



State Number: 54
DotArrayList -> DotArrayList DotArray .

Transitions: 
None


State Number: 55
DotArray -> . .Member 
Member -> .id ( ExpList ) 
Member -> .length 

Transitions: 
Transition to 88 on length
Transition to 57 on id
Transition to 56 on Member



State Number: 56
DotArray -> . Member .

Transitions: 
None


State Number: 57
Member -> id .( ExpList ) 

Transitions: 
Transition to 58 on (



State Number: 58
Member -> id ( .ExpList ) 
ExpList -> .Exp ExpRest 
ExpList -> .
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 59 on ExpList
Transition to 79 on id
Transition to 61 on Exp
Transition to 33 on Less



State Number: 59
Member -> id ( ExpList .) 

Transitions: 
Transition to 60 on )



State Number: 60
Member -> id ( ExpList ) .

Transitions: 
None


State Number: 61
ExpList -> Exp .ExpRest 
ExpRest -> ., Exp ExpRest 
ExpRest -> .

Transitions: 
Transition to 62 on ExpRest
Transition to 63 on ,



State Number: 62
ExpList -> Exp ExpRest .

Transitions: 
None


State Number: 63
ExpRest -> , .Exp ExpRest 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 64 on Exp
Transition to 33 on Less



State Number: 64
ExpRest -> , Exp .ExpRest 
ExpRest -> ., Exp ExpRest 
ExpRest -> .

Transitions: 
Transition to 65 on ExpRest
Transition to 63 on ,



State Number: 65
ExpRest -> , Exp ExpRest .

Transitions: 
None


State Number: 66
Not -> Factor .DotArrayList 
DotArrayList -> .DotArrayList DotArray 
DotArrayList -> .

Transitions: 
Transition to 67 on DotArrayList



State Number: 67
Not -> Factor DotArrayList .
DotArrayList -> DotArrayList .DotArray 
DotArray -> .. Member 
DotArray -> .[ Exp ] 

Transitions: 
Transition to 68 on [
Transition to 55 on .
Transition to 54 on DotArray



State Number: 68
DotArray -> [ .Exp ] 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 69 on Exp
Transition to 33 on Less



State Number: 69
DotArray -> [ Exp .] 

Transitions: 
Transition to 70 on ]



State Number: 70
DotArray -> [ Exp ] .

Transitions: 
None


State Number: 71
Factor -> new .New 
New -> .int [ Exp ] 
New -> .id ( ) 

Transitions: 
Transition to 72 on New
Transition to 85 on id
Transition to 73 on int



State Number: 72
Factor -> new New .

Transitions: 
None


State Number: 73
New -> int .[ Exp ] 

Transitions: 
Transition to 74 on [



State Number: 74
New -> int [ .Exp ] 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 75 on Exp
Transition to 33 on Less



State Number: 75
New -> int [ Exp .] 

Transitions: 
Transition to 76 on ]



State Number: 76
New -> int [ Exp ] .

Transitions: 
None


State Number: 77
Factor -> true .

Transitions: 
None


State Number: 78
Factor -> false .

Transitions: 
None


State Number: 79
Factor -> id .

Transitions: 
None


State Number: 80
Factor -> this .

Transitions: 
None


State Number: 81
Factor -> number .

Transitions: 
None


State Number: 82
Factor -> ( .Exp ) 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 83 on Exp
Transition to 33 on Less



State Number: 83
Factor -> ( Exp .) 

Transitions: 
Transition to 84 on )



State Number: 84
Factor -> ( Exp ) .

Transitions: 
None


State Number: 85
New -> id .( ) 

Transitions: 
Transition to 86 on (



State Number: 86
New -> id ( .) 

Transitions: 
Transition to 87 on )



State Number: 87
New -> id ( ) .

Transitions: 
None


State Number: 88
Member -> length .

Transitions: 
None


State Number: 89
StatementList -> StatementList Statement .

Transitions: 
None


State Number: 90
Statement -> for .( InitializationStm ; Exp ; IncrementStm ) Statement 

Transitions: 
Transition to 91 on (



State Number: 91
Statement -> for ( .InitializationStm ; Exp ; IncrementStm ) Statement 
InitializationStm -> .id = Exp 
InitializationStm -> .id [ Exp ] = Exp 

Transitions: 
Transition to 184 on id
Transition to 92 on InitializationStm



State Number: 92
Statement -> for ( InitializationStm .; Exp ; IncrementStm ) Statement 

Transitions: 
Transition to 93 on ;



State Number: 93
Statement -> for ( InitializationStm ; .Exp ; IncrementStm ) Statement 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 94 on Exp
Transition to 33 on Less



State Number: 94
Statement -> for ( InitializationStm ; Exp .; IncrementStm ) Statement 

Transitions: 
Transition to 95 on ;



State Number: 95
Statement -> for ( InitializationStm ; Exp ; .IncrementStm ) Statement 
IncrementStm -> .id = Exp 
IncrementStm -> .id [ Exp ] = Exp 

Transitions: 
Transition to 96 on IncrementStm
Transition to 176 on id



State Number: 96
Statement -> for ( InitializationStm ; Exp ; IncrementStm .) Statement 

Transitions: 
Transition to 97 on )



State Number: 97
Statement -> for ( InitializationStm ; Exp ; IncrementStm ) .Statement 
Statement -> .for ( InitializationStm ; Exp ; IncrementStm ) Statement 
Statement -> .{ StatementList } 
Statement -> .do { Statement } while ( Exp ) ; 
Statement -> .id Assign 
Statement -> .switch ( id ) { caseList } 
Statement -> .while ( Exp ) Statement 
Statement -> .System.out.println ( Exp ) ; 
Statement -> .( Type id = Exp ) FormalVarExp ; 
Statement -> .if ( Exp ) { Statement } ElseIfList 

Transitions: 
Transition to 98 on Statement
Transition to 90 on for
Transition to 139 on (
Transition to 99 on {
Transition to 102 on do
Transition to 111 on id
Transition to 129 on while
Transition to 161 on if
Transition to 122 on switch
Transition to 134 on System.out.println



State Number: 98
Statement -> for ( InitializationStm ; Exp ; IncrementStm ) Statement .

Transitions: 
None


State Number: 99
Statement -> { .StatementList } 
StatementList -> .
StatementList -> .StatementList Statement 

Transitions: 
Transition to 100 on StatementList



State Number: 100
Statement -> { StatementList .} 
StatementList -> StatementList .Statement 
Statement -> .for ( InitializationStm ; Exp ; IncrementStm ) Statement 
Statement -> .{ StatementList } 
Statement -> .do { Statement } while ( Exp ) ; 
Statement -> .id Assign 
Statement -> .switch ( id ) { caseList } 
Statement -> .while ( Exp ) Statement 
Statement -> .System.out.println ( Exp ) ; 
Statement -> .( Type id = Exp ) FormalVarExp ; 
Statement -> .if ( Exp ) { Statement } ElseIfList 

Transitions: 
Transition to 89 on Statement
Transition to 90 on for
Transition to 139 on (
Transition to 99 on {
Transition to 102 on do
Transition to 111 on id
Transition to 129 on while
Transition to 101 on }
Transition to 161 on if
Transition to 122 on switch
Transition to 134 on System.out.println



State Number: 101
Statement -> { StatementList } .

Transitions: 
None


State Number: 102
Statement -> do .{ Statement } while ( Exp ) ; 

Transitions: 
Transition to 103 on {



State Number: 103
Statement -> do { .Statement } while ( Exp ) ; 
Statement -> .for ( InitializationStm ; Exp ; IncrementStm ) Statement 
Statement -> .{ StatementList } 
Statement -> .do { Statement } while ( Exp ) ; 
Statement -> .id Assign 
Statement -> .switch ( id ) { caseList } 
Statement -> .while ( Exp ) Statement 
Statement -> .System.out.println ( Exp ) ; 
Statement -> .( Type id = Exp ) FormalVarExp ; 
Statement -> .if ( Exp ) { Statement } ElseIfList 

Transitions: 
Transition to 104 on Statement
Transition to 90 on for
Transition to 139 on (
Transition to 99 on {
Transition to 102 on do
Transition to 111 on id
Transition to 129 on while
Transition to 161 on if
Transition to 122 on switch
Transition to 134 on System.out.println



State Number: 104
Statement -> do { Statement .} while ( Exp ) ; 

Transitions: 
Transition to 105 on }



State Number: 105
Statement -> do { Statement } .while ( Exp ) ; 

Transitions: 
Transition to 106 on while



State Number: 106
Statement -> do { Statement } while .( Exp ) ; 

Transitions: 
Transition to 107 on (



State Number: 107
Statement -> do { Statement } while ( .Exp ) ; 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 108 on Exp
Transition to 33 on Less



State Number: 108
Statement -> do { Statement } while ( Exp .) ; 

Transitions: 
Transition to 109 on )



State Number: 109
Statement -> do { Statement } while ( Exp ) .; 

Transitions: 
Transition to 110 on ;



State Number: 110
Statement -> do { Statement } while ( Exp ) ; .

Transitions: 
None


State Number: 111
Statement -> id .Assign 
Assign -> .= Exp ; 
Assign -> .[ Exp ] = Exp ; 

Transitions: 
Transition to 112 on Assign
Transition to 116 on [
Transition to 113 on =



State Number: 112
Statement -> id Assign .

Transitions: 
None


State Number: 113
Assign -> = .Exp ; 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 114 on Exp
Transition to 33 on Less



State Number: 114
Assign -> = Exp .; 

Transitions: 
Transition to 115 on ;



State Number: 115
Assign -> = Exp ; .

Transitions: 
None


State Number: 116
Assign -> [ .Exp ] = Exp ; 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 117 on Exp
Transition to 33 on Less



State Number: 117
Assign -> [ Exp .] = Exp ; 

Transitions: 
Transition to 118 on ]



State Number: 118
Assign -> [ Exp ] .= Exp ; 

Transitions: 
Transition to 119 on =



State Number: 119
Assign -> [ Exp ] = .Exp ; 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 120 on Exp
Transition to 33 on Less



State Number: 120
Assign -> [ Exp ] = Exp .; 

Transitions: 
Transition to 121 on ;



State Number: 121
Assign -> [ Exp ] = Exp ; .

Transitions: 
None


State Number: 122
Statement -> switch .( id ) { caseList } 

Transitions: 
Transition to 123 on (



State Number: 123
Statement -> switch ( .id ) { caseList } 

Transitions: 
Transition to 124 on id



State Number: 124
Statement -> switch ( id .) { caseList } 

Transitions: 
Transition to 125 on )



State Number: 125
Statement -> switch ( id ) .{ caseList } 

Transitions: 
Transition to 126 on {



State Number: 126
Statement -> switch ( id ) { .caseList } 

Transitions: 
Transition to 127 on caseList



State Number: 127
Statement -> switch ( id ) { caseList .} 

Transitions: 
Transition to 128 on }



State Number: 128
Statement -> switch ( id ) { caseList } .

Transitions: 
None


State Number: 129
Statement -> while .( Exp ) Statement 

Transitions: 
Transition to 130 on (



State Number: 130
Statement -> while ( .Exp ) Statement 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 131 on Exp
Transition to 33 on Less



State Number: 131
Statement -> while ( Exp .) Statement 

Transitions: 
Transition to 132 on )



State Number: 132
Statement -> while ( Exp ) .Statement 
Statement -> .for ( InitializationStm ; Exp ; IncrementStm ) Statement 
Statement -> .{ StatementList } 
Statement -> .do { Statement } while ( Exp ) ; 
Statement -> .id Assign 
Statement -> .switch ( id ) { caseList } 
Statement -> .while ( Exp ) Statement 
Statement -> .System.out.println ( Exp ) ; 
Statement -> .( Type id = Exp ) FormalVarExp ; 
Statement -> .if ( Exp ) { Statement } ElseIfList 

Transitions: 
Transition to 133 on Statement
Transition to 90 on for
Transition to 139 on (
Transition to 99 on {
Transition to 102 on do
Transition to 111 on id
Transition to 129 on while
Transition to 161 on if
Transition to 122 on switch
Transition to 134 on System.out.println



State Number: 133
Statement -> while ( Exp ) Statement .

Transitions: 
None


State Number: 134
Statement -> System.out.println .( Exp ) ; 

Transitions: 
Transition to 135 on (



State Number: 135
Statement -> System.out.println ( .Exp ) ; 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 136 on Exp
Transition to 33 on Less



State Number: 136
Statement -> System.out.println ( Exp .) ; 

Transitions: 
Transition to 137 on )



State Number: 137
Statement -> System.out.println ( Exp ) .; 

Transitions: 
Transition to 138 on ;



State Number: 138
Statement -> System.out.println ( Exp ) ; .

Transitions: 
None


State Number: 139
Statement -> ( .Type id = Exp ) FormalVarExp ; 
Type -> .int IntType 
Type -> .boolean 
Type -> .id 

Transitions: 
Transition to 140 on Type
Transition to 159 on boolean
Transition to 160 on id
Transition to 155 on int



State Number: 140
Statement -> ( Type .id = Exp ) FormalVarExp ; 

Transitions: 
Transition to 141 on id



State Number: 141
Statement -> ( Type id .= Exp ) FormalVarExp ; 

Transitions: 
Transition to 142 on =



State Number: 142
Statement -> ( Type id = .Exp ) FormalVarExp ; 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 143 on Exp
Transition to 33 on Less



State Number: 143
Statement -> ( Type id = Exp .) FormalVarExp ; 

Transitions: 
Transition to 144 on )



State Number: 144
Statement -> ( Type id = Exp ) .FormalVarExp ; 
FormalVarExp -> .
FormalVarExp -> ., ( Type id = Exp ) FormalVarExp 

Transitions: 
Transition to 145 on FormalVarExp
Transition to 147 on ,



State Number: 145
Statement -> ( Type id = Exp ) FormalVarExp .; 

Transitions: 
Transition to 146 on ;



State Number: 146
Statement -> ( Type id = Exp ) FormalVarExp ; .

Transitions: 
None


State Number: 147
FormalVarExp -> , .( Type id = Exp ) FormalVarExp 

Transitions: 
Transition to 148 on (



State Number: 148
FormalVarExp -> , ( .Type id = Exp ) FormalVarExp 
Type -> .int IntType 
Type -> .boolean 
Type -> .id 

Transitions: 
Transition to 149 on Type
Transition to 159 on boolean
Transition to 160 on id
Transition to 155 on int



State Number: 149
FormalVarExp -> , ( Type .id = Exp ) FormalVarExp 

Transitions: 
Transition to 150 on id



State Number: 150
FormalVarExp -> , ( Type id .= Exp ) FormalVarExp 

Transitions: 
Transition to 151 on =



State Number: 151
FormalVarExp -> , ( Type id = .Exp ) FormalVarExp 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 152 on Exp
Transition to 33 on Less



State Number: 152
FormalVarExp -> , ( Type id = Exp .) FormalVarExp 

Transitions: 
Transition to 153 on )



State Number: 153
FormalVarExp -> , ( Type id = Exp ) .FormalVarExp 
FormalVarExp -> .
FormalVarExp -> ., ( Type id = Exp ) FormalVarExp 

Transitions: 
Transition to 154 on FormalVarExp
Transition to 147 on ,



State Number: 154
FormalVarExp -> , ( Type id = Exp ) FormalVarExp .

Transitions: 
None


State Number: 155
Type -> int .IntType 
IntType -> .[ ] 
IntType -> .

Transitions: 
Transition to 157 on [
Transition to 156 on IntType



State Number: 156
Type -> int IntType .

Transitions: 
None


State Number: 157
IntType -> [ .] 

Transitions: 
Transition to 158 on ]



State Number: 158
IntType -> [ ] .

Transitions: 
None


State Number: 159
Type -> boolean .

Transitions: 
None


State Number: 160
Type -> id .

Transitions: 
None


State Number: 161
Statement -> if .( Exp ) { Statement } ElseIfList 

Transitions: 
Transition to 162 on (



State Number: 162
Statement -> if ( .Exp ) { Statement } ElseIfList 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 163 on Exp
Transition to 33 on Less



State Number: 163
Statement -> if ( Exp .) { Statement } ElseIfList 

Transitions: 
Transition to 164 on )



State Number: 164
Statement -> if ( Exp ) .{ Statement } ElseIfList 

Transitions: 
Transition to 165 on {



State Number: 165
Statement -> if ( Exp ) { .Statement } ElseIfList 
Statement -> .for ( InitializationStm ; Exp ; IncrementStm ) Statement 
Statement -> .{ StatementList } 
Statement -> .do { Statement } while ( Exp ) ; 
Statement -> .id Assign 
Statement -> .switch ( id ) { caseList } 
Statement -> .while ( Exp ) Statement 
Statement -> .System.out.println ( Exp ) ; 
Statement -> .( Type id = Exp ) FormalVarExp ; 
Statement -> .if ( Exp ) { Statement } ElseIfList 

Transitions: 
Transition to 166 on Statement
Transition to 90 on for
Transition to 139 on (
Transition to 99 on {
Transition to 102 on do
Transition to 111 on id
Transition to 129 on while
Transition to 161 on if
Transition to 122 on switch
Transition to 134 on System.out.println



State Number: 166
Statement -> if ( Exp ) { Statement .} ElseIfList 

Transitions: 
Transition to 167 on }



State Number: 167
Statement -> if ( Exp ) { Statement } .ElseIfList 
ElseIfList -> .ElseIfList ElseIf 
ElseIfList -> .

Transitions: 
Transition to 168 on ElseIfList



State Number: 168
Statement -> if ( Exp ) { Statement } ElseIfList .
ElseIfList -> ElseIfList .ElseIf 
ElseIf -> .else if ( Exp ) Statement 

Transitions: 
Transition to 169 on ElseIf
Transition to 170 on else



State Number: 169
ElseIfList -> ElseIfList ElseIf .

Transitions: 
None


State Number: 170
ElseIf -> else .if ( Exp ) Statement 

Transitions: 
Transition to 171 on if



State Number: 171
ElseIf -> else if .( Exp ) Statement 

Transitions: 
Transition to 172 on (



State Number: 172
ElseIf -> else if ( .Exp ) Statement 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 173 on Exp
Transition to 33 on Less



State Number: 173
ElseIf -> else if ( Exp .) Statement 

Transitions: 
Transition to 174 on )



State Number: 174
ElseIf -> else if ( Exp ) .Statement 
Statement -> .for ( InitializationStm ; Exp ; IncrementStm ) Statement 
Statement -> .{ StatementList } 
Statement -> .do { Statement } while ( Exp ) ; 
Statement -> .id Assign 
Statement -> .switch ( id ) { caseList } 
Statement -> .while ( Exp ) Statement 
Statement -> .System.out.println ( Exp ) ; 
Statement -> .( Type id = Exp ) FormalVarExp ; 
Statement -> .if ( Exp ) { Statement } ElseIfList 

Transitions: 
Transition to 175 on Statement
Transition to 90 on for
Transition to 139 on (
Transition to 99 on {
Transition to 102 on do
Transition to 111 on id
Transition to 129 on while
Transition to 161 on if
Transition to 122 on switch
Transition to 134 on System.out.println



State Number: 175
ElseIf -> else if ( Exp ) Statement .

Transitions: 
None


State Number: 176
IncrementStm -> id .= Exp 
IncrementStm -> id .[ Exp ] = Exp 

Transitions: 
Transition to 179 on [
Transition to 177 on =



State Number: 177
IncrementStm -> id = .Exp 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 178 on Exp
Transition to 33 on Less



State Number: 178
IncrementStm -> id = Exp .

Transitions: 
None


State Number: 179
IncrementStm -> id [ .Exp ] = Exp 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 180 on Exp
Transition to 33 on Less



State Number: 180
IncrementStm -> id [ Exp .] = Exp 

Transitions: 
Transition to 181 on ]



State Number: 181
IncrementStm -> id [ Exp ] .= Exp 

Transitions: 
Transition to 182 on =



State Number: 182
IncrementStm -> id [ Exp ] = .Exp 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 183 on Exp
Transition to 33 on Less



State Number: 183
IncrementStm -> id [ Exp ] = Exp .

Transitions: 
None


State Number: 184
InitializationStm -> id .= Exp 
InitializationStm -> id .[ Exp ] = Exp 

Transitions: 
Transition to 187 on [
Transition to 185 on =



State Number: 185
InitializationStm -> id = .Exp 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 186 on Exp
Transition to 33 on Less



State Number: 186
InitializationStm -> id = Exp .

Transitions: 
None


State Number: 187
InitializationStm -> id [ .Exp ] = Exp 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 188 on Exp
Transition to 33 on Less



State Number: 188
InitializationStm -> id [ Exp .] = Exp 

Transitions: 
Transition to 189 on ]



State Number: 189
InitializationStm -> id [ Exp ] .= Exp 

Transitions: 
Transition to 190 on =



State Number: 190
InitializationStm -> id [ Exp ] = .Exp 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 191 on Exp
Transition to 33 on Less



State Number: 191
InitializationStm -> id [ Exp ] = Exp .

Transitions: 
None


State Number: 192
VarDeclList -> VarDeclList VarDecl .

Transitions: 
None


State Number: 193
VarDecl -> Type .VarDeclID MultiDeclList ; 
VarDeclID -> .id VarDeclAssign 

Transitions: 
Transition to 194 on VarDeclID
Transition to 203 on id



State Number: 194
VarDecl -> Type VarDeclID .MultiDeclList ; 
MultiDeclList -> .MultiDeclList MultiDecl 
MultiDeclList -> .

Transitions: 
Transition to 195 on MultiDeclList



State Number: 195
VarDecl -> Type VarDeclID MultiDeclList .; 
MultiDeclList -> MultiDeclList .MultiDecl 
MultiDecl -> ., id VarDeclAssign 

Transitions: 
Transition to 197 on MultiDecl
Transition to 196 on ;
Transition to 198 on ,



State Number: 196
VarDecl -> Type VarDeclID MultiDeclList ; .

Transitions: 
None


State Number: 197
MultiDeclList -> MultiDeclList MultiDecl .

Transitions: 
None


State Number: 198
MultiDecl -> , .id VarDeclAssign 

Transitions: 
Transition to 199 on id



State Number: 199
MultiDecl -> , id .VarDeclAssign 
VarDeclAssign -> .
VarDeclAssign -> .= Exp 

Transitions: 
Transition to 200 on VarDeclAssign
Transition to 201 on =



State Number: 200
MultiDecl -> , id VarDeclAssign .

Transitions: 
None


State Number: 201
VarDeclAssign -> = .Exp 
Exp -> .And Elist 
And -> .Less Alist 
Less -> .Term Llist 
Term -> .Not Tlist 
Not -> .! Factor DotArrayList 
Not -> .Factor DotArrayList 
Factor -> .new New 
Factor -> .true 
Factor -> .false 
Factor -> .id 
Factor -> .this 
Factor -> .number 
Factor -> .( Exp ) 

Transitions: 
Transition to 51 on !
Transition to 71 on new
Transition to 78 on false
Transition to 80 on this
Transition to 82 on (
Transition to 38 on Term
Transition to 81 on number
Transition to 46 on Not
Transition to 28 on And
Transition to 66 on Factor
Transition to 77 on true
Transition to 79 on id
Transition to 202 on Exp
Transition to 33 on Less



State Number: 202
VarDeclAssign -> = Exp .

Transitions: 
None


State Number: 203
VarDeclID -> id .VarDeclAssign 
VarDeclAssign -> .
VarDeclAssign -> .= Exp 

Transitions: 
Transition to 204 on VarDeclAssign
Transition to 201 on =



State Number: 204
VarDeclID -> id VarDeclAssign .

Transitions: 
None


State Number: 205
FormalList -> Type .id FormalRest 

Transitions: 
Transition to 206 on id



State Number: 206
FormalList -> Type id .FormalRest 
FormalRest -> ., Type id FormalRest 
FormalRest -> .

Transitions: 
Transition to 208 on ,
Transition to 207 on FormalRest



State Number: 207
FormalList -> Type id FormalRest .

Transitions: 
None


State Number: 208
FormalRest -> , .Type id FormalRest 
Type -> .int IntType 
Type -> .boolean 
Type -> .id 

Transitions: 
Transition to 209 on Type
Transition to 159 on boolean
Transition to 160 on id
Transition to 155 on int



State Number: 209
FormalRest -> , Type .id FormalRest 

Transitions: 
Transition to 210 on id



State Number: 210
FormalRest -> , Type id .FormalRest 
FormalRest -> ., Type id FormalRest 
FormalRest -> .

Transitions: 
Transition to 208 on ,
Transition to 211 on FormalRest



State Number: 211
FormalRest -> , Type id FormalRest .

Transitions: 
None


State Number: 212
ClassDeclDeff -> { .VarDeclList MethodDeclList } 
VarDeclList -> .
VarDeclList -> .VarDeclList VarDecl 

Transitions: 
Transition to 213 on VarDeclList



State Number: 213
ClassDeclDeff -> { VarDeclList .MethodDeclList } 
MethodDeclList -> .MethodDeclList MethodDecl 
MethodDeclList -> .
VarDeclList -> VarDeclList .VarDecl 
VarDecl -> .Type VarDeclID MultiDeclList ; 
Type -> .int IntType 
Type -> .boolean 
Type -> .id 

Transitions: 
Transition to 193 on Type
Transition to 159 on boolean
Transition to 214 on MethodDeclList
Transition to 192 on VarDecl
Transition to 160 on id
Transition to 155 on int



State Number: 214
ClassDeclDeff -> { VarDeclList MethodDeclList .} 
MethodDeclList -> MethodDeclList .MethodDecl 
MethodDecl -> .public Type id ( FormalList ) { VarDeclList StatementList return Exp ; } 

Transitions: 
Transition to 15 on public
Transition to 14 on MethodDecl
Transition to 215 on }



State Number: 215
ClassDeclDeff -> { VarDeclList MethodDeclList } .

Transitions: 
None


State Number: 216
ClassDeclSpec -> class .id 

Transitions: 
Transition to 217 on id



State Number: 217
ClassDeclSpec -> class id .

Transitions: 
None


State Number: 218
MainClass -> class .id { public static void main ( String [ ] id ) { VarDeclList { StatementList } } } 

Transitions: 
Transition to 219 on id



State Number: 219
MainClass -> class id .{ public static void main ( String [ ] id ) { VarDeclList { StatementList } } } 

Transitions: 
Transition to 220 on {



State Number: 220
MainClass -> class id { .public static void main ( String [ ] id ) { VarDeclList { StatementList } } } 

Transitions: 
Transition to 221 on public



State Number: 221
MainClass -> class id { public .static void main ( String [ ] id ) { VarDeclList { StatementList } } } 

Transitions: 
Transition to 222 on static



State Number: 222
MainClass -> class id { public static .void main ( String [ ] id ) { VarDeclList { StatementList } } } 

Transitions: 
Transition to 223 on void



State Number: 223
MainClass -> class id { public static void .main ( String [ ] id ) { VarDeclList { StatementList } } } 

Transitions: 
Transition to 224 on main



State Number: 224
MainClass -> class id { public static void main .( String [ ] id ) { VarDeclList { StatementList } } } 

Transitions: 
Transition to 225 on (



State Number: 225
MainClass -> class id { public static void main ( .String [ ] id ) { VarDeclList { StatementList } } } 

Transitions: 
Transition to 226 on String



State Number: 226
MainClass -> class id { public static void main ( String .[ ] id ) { VarDeclList { StatementList } } } 

Transitions: 
Transition to 227 on [



State Number: 227
MainClass -> class id { public static void main ( String [ .] id ) { VarDeclList { StatementList } } } 

Transitions: 
Transition to 228 on ]



State Number: 228
MainClass -> class id { public static void main ( String [ ] .id ) { VarDeclList { StatementList } } } 

Transitions: 
Transition to 229 on id



State Number: 229
MainClass -> class id { public static void main ( String [ ] id .) { VarDeclList { StatementList } } } 

Transitions: 
Transition to 230 on )



State Number: 230
MainClass -> class id { public static void main ( String [ ] id ) .{ VarDeclList { StatementList } } } 

Transitions: 
Transition to 231 on {



State Number: 231
MainClass -> class id { public static void main ( String [ ] id ) { .VarDeclList { StatementList } } } 
VarDeclList -> .
VarDeclList -> .VarDeclList VarDecl 

Transitions: 
Transition to 232 on VarDeclList



State Number: 232
MainClass -> class id { public static void main ( String [ ] id ) { VarDeclList .{ StatementList } } } 
VarDeclList -> VarDeclList .VarDecl 
VarDecl -> .Type VarDeclID MultiDeclList ; 
Type -> .int IntType 
Type -> .boolean 
Type -> .id 

Transitions: 
Transition to 193 on Type
Transition to 159 on boolean
Transition to 192 on VarDecl
Transition to 233 on {
Transition to 160 on id
Transition to 155 on int



State Number: 233
MainClass -> class id { public static void main ( String [ ] id ) { VarDeclList { .StatementList } } } 
StatementList -> .
StatementList -> .StatementList Statement 

Transitions: 
Transition to 234 on StatementList



State Number: 234
MainClass -> class id { public static void main ( String [ ] id ) { VarDeclList { StatementList .} } } 
StatementList -> StatementList .Statement 
Statement -> .for ( InitializationStm ; Exp ; IncrementStm ) Statement 
Statement -> .{ StatementList } 
Statement -> .do { Statement } while ( Exp ) ; 
Statement -> .id Assign 
Statement -> .switch ( id ) { caseList } 
Statement -> .while ( Exp ) Statement 
Statement -> .System.out.println ( Exp ) ; 
Statement -> .( Type id = Exp ) FormalVarExp ; 
Statement -> .if ( Exp ) { Statement } ElseIfList 

Transitions: 
Transition to 89 on Statement
Transition to 90 on for
Transition to 139 on (
Transition to 99 on {
Transition to 102 on do
Transition to 111 on id
Transition to 129 on while
Transition to 235 on }
Transition to 161 on if
Transition to 122 on switch
Transition to 134 on System.out.println



State Number: 235
MainClass -> class id { public static void main ( String [ ] id ) { VarDeclList { StatementList } .} } 

Transitions: 
Transition to 236 on }



State Number: 236
MainClass -> class id { public static void main ( String [ ] id ) { VarDeclList { StatementList } } .} 

Transitions: 
Transition to 237 on }



State Number: 237
MainClass -> class id { public static void main ( String [ ] id ) { VarDeclList { StatementList } } } .

Transitions: 
None


