/* This file was generated by SableCC (http://www.sablecc.org/). */

package lexing.node;

import lexing.analysis.*;

@SuppressWarnings("nls")
public final class ANumE extends PE
{
    private TIntNum _intNum_;

    public ANumE()
    {
        // Constructor
    }

    public ANumE(
        @SuppressWarnings("hiding") TIntNum _intNum_)
    {
        // Constructor
        setIntNum(_intNum_);

    }

    @Override
    public Object clone()
    {
        return new ANumE(
            cloneNode(this._intNum_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANumE(this);
    }

    public TIntNum getIntNum()
    {
        return this._intNum_;
    }

    public void setIntNum(TIntNum node)
    {
        if(this._intNum_ != null)
        {
            this._intNum_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._intNum_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._intNum_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._intNum_ == child)
        {
            this._intNum_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._intNum_ == oldChild)
        {
            setIntNum((TIntNum) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
